  <%
  my $api = gitprep_api;
  
  my $op = param('op') || '';
  
  my $errors;
  my $successMessage;

  #fetch all email and username
  my $res =  app->dbi->model('user')->select(['id', 'email']);
  my $all_ids = $res->all;
  my @id_ar;
  my @email_ar;
  my ($all_id, $all_email);
  if ($all_ids) {
    for (@$all_ids) {
      next if (!$_);
      push @id_ar, $_->{'id'};
      push @email_ar, $_->{'email'};
    }
    $all_id = join(',', @id_ar);
    $all_email = join(',', @email_ar);
  }
 #die ($id_ar.$email_ar);
  #my $all_id =  app->dbi->execute("select id from user");
  #use Data::Dumper; die Dumper $all_id;
  # my $all_email =  app->dbi->execute("select email from user ",
  #       {email => $email})->value;

  if ($op eq 'create') {
  
    # Parameters
    my $id = lc param('id'); #represents username
    my $firstname = param('firstname');
    my $lastname = param('lastname');
    my $email = param('email');
    my $password = param('password');
    
    # Validator
    my $vc = app->vc;
    
    # Validation result
    my $validation = $vc->validation;
    
    # "id" check
    if (!(defined $id && length $id)) {
      $validation->add_failed(id => 'User id is empty.');
    }
    elsif (!$vc->check($id, 'user_name')) {
      $validation->add_failed(id => 'User id contain invalid character.');
    }
    elsif (length $id > 20) {
      $validation->add_failed(id => 'User id is too long.');
    }
    else {
      #my $row = app->dbi->model('user')->select(where => {id => $id})->one;
      #make it case insenstive
      my $row =  app->dbi->execute("select id from \"user\" where id like :id",
          {id => $id})->value;
      if ($row) {
        $validation->add_failed(id => "User id $id already exists");
      }
    }
    
    # "name" check
    $firstname //= '';
    $lastname //= '';
    
    # "email" check
    if (!(defined $email && length $email)) {
      $validation->add_failed(email => "Mail must be not empty");
    }
    elsif ($email !~ /\@/) {
      $validation->add_failed(email => "Invalid mail address");
    }
    else {
      #my $row = app->dbi->model('user')->select(where => {email => $email})->one;
      my $row =  app->dbi->execute("select email from \"user\" where email like :email",
          {email => $email})->value;
      if ($row) {
        $validation->add_failed(email => "Mail $email already exists");
      }
    }
    
    # "password" check
    if (!(defined $password && length $password)) {
      $validation->add_failed(password => 'Password is empty.');
    }
    elsif (!$vc->check($password, 'ascii_graphic')) {
      $validation->add_failed(password => 'Password contain invalid character.');
    }
    
    if ($validation->is_valid) {
      
      # Encrypt password
      my ($password_encrypted, $salt) = $api->encrypt_password($password);
      my $tm = Time::Moment->now_utc;
      my $strTime = $tm->at_utc->strftime("%Y-%m-%d %H:%M:%S");
      my $params = {};
      $params->{password} = $password_encrypted;
      $params->{salt} = $salt;
      $params->{name} = $firstname.' '.$lastname;
      $params->{email} = $email;
      $params->{status} = 1;
      $params->{maxsize} = 5000000;
      $params->{regdate} = $strTime;
      
      # Create user
      eval { app->manager->create_user($id, $params) };

      # Code to verify email address
      # eval {
        use strict;
        use warnings;
        use Mojo::JWT;

        use Email::Sender::Simple qw(sendmail);
        use Email::Sender::Transport::SMTP ();
        use Email::Sender::Transport::SMTP::TLS;
        use Email::Sender::Transport::SMTPS;
        use Email::Simple ();
        use Email::Simple::Creator ();
        use Try::Tiny;

        my $transport = Email::Sender::Transport::SMTP->new(
          {
            host => 'mail.gomailex.com',
            port => 25,
            sasl_username => 'gitdada@gomailex.com',
            sasl_password => 'Gulf@123',
            debug => 1,
          }
        );

        my $jwt = Mojo::JWT->new(claims => $email, secret => 'SeCreT#git#dada')->encode;
        my $url = url_for('/confirm')->to_abs->query(jwt => $jwt);
        $url =~ s/localhost:10020/gitdada.com/;
        my $body = "Hello!\n Please follow the url below to verify your email address.\n $url \n If you did not create an account, no further action is required\n";
        my $verification_email = Email::Simple->create(
          header => [
            To      => $email,
            From    => '"Gitdada Support" <gitdada@gomailex.com>',
            Subject => "Verify Email Address",
          ],          
          body => $body,
        );
        $verification_email->header_set( 'X-Content-Container' => 'bottle/glass' );
 
        # print $email->as_string;
        try {
          sendmail($verification_email, {transport => $transport});
        } catch {
            die "Error sending email: $_";
        };
        # sendmail($verification_email);
      # };
      if (my $e = $@) {
        app->log->error(url_for . ": $e");
        $errors = ['Internal Error'];
      }
      else {
        # $self->flash(success => 1);
        # $self->flash(id => $id);
        # $self->redirect_to('/'.$id);

        $successMessage = "Thank you for creating an account with GitDada. Please visit your email address to verify your account.";
      }
    }
    else { 
      #my $errors1 = $validation->messages;
      my $error_arr = $validation->{'_failed_infos'};
      my $message;
      if ($error_arr) {
        for (keys %$error_arr) {
          next if (!$_);
          my $msg_ref = $error_arr->{$_};
          my $msg = $msg_ref->{'message'};
          $message .= "$msg\n" if ($msg);
        }
      }
      chomp $message;
      $errors = $message;
      #$errors = "Error! Please ensure you are submitting the correct fields";
    }
  }
%>

%= javascript '/js/icon-input.js';

%= javascript begin
    $(document).ready(function(){
      $("#usrerr").hide();
      $("#emailerr").hide();
        $("#id").change("input", function(){
          $("#usrerr").hide();
          var val = $(this).val();
          val.trim();
          var ids = "<%= $all_id %>";
          var arr = ids.split(",");
          arr.forEach(function(id) {
            id.trim();
            if (id === val) {
              $("#usrerr").show();
            }
          });
        });
        $("#email").change("input", function(){
          $("#emailerr").hide();
            var val = $(this).val();
            var emails = "<%= $all_email %>";
            var arr = emails.split(",");
            arr.forEach(function(email) {
              email.trim();
              if (email === val) {
                $("#emailerr").show(); 
              }
            });
        });
        
    }); 
% end

% layout 'frontcommon', title => 'Create User';
  %= include '/include/fheader';
  <div class="content content-fixed content-auth">
    <div class="container">
      <div class="media align-items-stretch justify-content-center ht-100p pos-relative">
        <div class="media-body align-items-center d-none d-lg-flex">
          <div class="mx-wd-600">
            <img src="image/signup-banner.png" class="img-fluid" alt="" />
          </div>
          <!-- div class="pos-absolute b-0 l-0 tx-12 tx-center">
            Workspace design vector is created by <a href="#" target="_blank">Bangladesh Software Professionm (bdsoftpro.com)</a>
          </div> -->
        </div><!-- media-body -->
        <div class="sign-wrapper mg-lg-l-50 mg-xl-l-60">
          <div class="wd-100p">
            <h4 class="tx-color-01 mg-b-5">Create New Account</h4>
            <p class="tx-color-03 tx-16 mg-b-40">It's free to signup and only takes a minute.</p>
             <p style="color: red">
                <% if($errors){ %>
                <%= $errors %>
                <% } %>
              </p>
              <p style="color: green">
                <% if($successMessage){ %>
                <%= $successMessage %>
                <% } %>
              </p>
            <form action="<%= url_for->query(op => 'create') %>" method="post">
              <div class="form-group">
                <label>Username</label>
                <input type="text" name="id" id="id" class="form-control" placeholder="Enter username" required>
              </div>
              <div class="form-group" id="usrerr">
                <p style="color: red"> Username already taken </p>
              </div>
              <div class="form-group">
                <label>First Name</label>
                <input type="text" name="firstname" class="form-control" placeholder="Enter firstname">
              </div>
              <div class="form-group">
                <label>Last Name</label>
                <input type="text" name="lastname" class="form-control" placeholder="Enter lastname">
              </div>
              <div class="form-group">
                <label>Email address</label>
                <input type="email" id="email" name="email" class="form-control" placeholder="Enter your email address" required>
              </div>
               <div class="form-group" id="emailerr">
                <p style="color: red"> Email already taken </p>
              </div>
              <div class="form-group">
                <div class="d-flex justify-content-between mg-b-5">
                  <label class="mg-b-0-f">Password</label>
                </div>
                <input type="password" name="password" class="form-control" placeholder="Enter your password" required>
              </div>
              <div class="form-group tx-12">
                Your password must be at least 8 characters including a number and a lowercase letter. <a href="#">Learn more</a>.
              </div>
              <div class="form-group tx-12">
                By clicking <strong>Sign Up</strong> below, you agree to our terms of service and privacy statement.
              </div><!-- form-group -->

              <button type="submit" id="sbmt" class="btn btn-brand-02 btn-block">Sign Up</button>
            </form>
            <div class="divider-text">or</div>
            <button class="btn btn-outline-facebook btn-block">Sign Up With Facebook</button>
            <button class="btn btn-outline-twitter btn-block">Sign Up With Twitter</button>
            <div class="tx-13 mg-t-20 tx-center">Already have an account? <a href="<%= url_for('/') %>">Sign In</a></div>
          </div>
        </div><!-- sign-wrapper -->
      </div><!-- media -->
    </div><!-- container -->
  </div><!-- content -->
  %= include '/include/ffooter';
